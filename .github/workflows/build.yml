name: Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: aszeszo/ms-mqtt-adapter

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        arch:
          - amd64
          - aarch64
          - armhf
          - armv7
          - i386
        include:
          - arch: amd64
            platform: linux/amd64
            base_image: ghcr.io/home-assistant/amd64-base:latest
          - arch: aarch64
            platform: linux/arm64
            base_image: ghcr.io/home-assistant/aarch64-base:latest
          - arch: armhf
            platform: linux/arm/v6
            base_image: ghcr.io/home-assistant/armhf-base:latest
          - arch: armv7
            platform: linux/arm/v7
            base_image: ghcr.io/home-assistant/armv7-base:latest
          - arch: i386
            platform: linux/386
            base_image: ghcr.io/home-assistant/i386-base:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-${{ matrix.arch }}
            type=ref,event=pr,suffix=-${{ matrix.arch }}
            type=semver,pattern={{version}},suffix=-${{ matrix.arch }}
            type=semver,pattern={{major}}.{{minor}},suffix=-${{ matrix.arch }}
            type=semver,pattern={{major}},suffix=-${{ matrix.arch }}
            type=raw,value=latest-${{ matrix.arch }},enable={{is_default_branch}}

      - name: Build and push Docker image for ${{ matrix.arch }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=${{ matrix.arch }}
          build-args: |
            BUILD_FROM=${{ matrix.base_image }}

  manifest:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          # Extract version or use 'latest' for main branch
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}  # Remove 'v' prefix if present
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            VERSION="latest"
          else
            VERSION=${GITHUB_REF#refs/heads/}
          fi
          
          IMAGE_BASE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          
          # Create and push multi-arch manifest
          docker buildx imagetools create -t ${IMAGE_BASE}:${VERSION} \
            ${IMAGE_BASE}:${VERSION}-amd64 \
            ${IMAGE_BASE}:${VERSION}-aarch64 \
            ${IMAGE_BASE}:${VERSION}-armhf \
            ${IMAGE_BASE}:${VERSION}-armv7 \
            ${IMAGE_BASE}:${VERSION}-i386